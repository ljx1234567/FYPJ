{"ast":null,"code":"var _jsxFileName = \"/Users/liujiaxin/Documents/FYP/my-react-app/src/pages/JiaxinPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Jiaxin() {\n  _s();\n\n  const initialVlaues = {\n    name: \"\"\n  };\n  const [formValues, setFormValues] = useState(initialVlaues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleChange = e => {\n    console.log(e.target);\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n    console.log(formValues);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormErrors(validate(formValues));\n  };\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.name) {\n      errors.name = \"Name is required\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(formValues, undefined, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Information form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"name\",\n          value: formValues.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fluid ui button blud\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Jiaxin, \"0DEZXdACL3Kqr4tWFmOkE/CUyy8=\");\n\n_c = Jiaxin;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nexport default Jiaxin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jiaxin\");","map":{"version":3,"names":["React","useState","ReactDOM","Jiaxin","initialVlaues","name","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","handleChange","e","console","log","target","value","handleSubmit","preventDefault","validate","values","errors","regex","JSON","stringify","undefined","root","createRoot","document","getElementById"],"sources":["/Users/liujiaxin/Documents/FYP/my-react-app/src/pages/JiaxinPage.js"],"sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom/client';\n\nfunction Jiaxin() {\n    const initialVlaues = {name: \"\"}\n    const [formValues, setFormValues]= useState(initialVlaues)\n    const [formErrors, setFormErrors] = useState({})\n    const[isSubmit, setIsSubmit] = useState(false);\n\n    const handleChange = (e) => {\n        console.log(e.target);\n        const { name, value } = e.target\n        setFormValues({...formValues, [name]:value});\n        console.log(formValues)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setFormErrors(validate(formValues));\n    }\n\n    const validate = (values) => {\n        const errors = {}\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n        if(!values.name){\n            errors.name = \"Name is required\";\n        }\n    }\n    return(\n        <div className='App'>\n            <pre>{ JSON.stringify(formValues, undefined, 2) }</pre>\n            <form>\n                <h1>Information form</h1>\n                <div className='ui divider'></div>\n                <div className='ui form'></div>\n                <div className='field'>\n                    <label>Name</label><br></br>\n                    <input type='text' name='name' placeholder='name' value={ formValues.name }\n                    onChange={handleChange}/>\n                    <br></br><br></br>\n                </div>\n                <button className='fluid ui button blud'>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nexport default Jiaxin;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EACd,MAAMC,aAAa,GAAG;IAACC,IAAI,EAAE;EAAP,CAAtB;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA6BN,QAAQ,CAACG,aAAD,CAA3C;EACA,MAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAK,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAvC;;EAEA,MAAMW,YAAY,GAAIC,CAAD,IAAO;IACxBC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;IACA,MAAM;MAAEX,IAAF;MAAQY;IAAR,IAAkBJ,CAAC,CAACG,MAA1B;IACAT,aAAa,CAAC,EAAC,GAAGD,UAAJ;MAAgB,CAACD,IAAD,GAAOY;IAAvB,CAAD,CAAb;IACAH,OAAO,CAACC,GAAR,CAAYT,UAAZ;EACH,CALD;;EAOA,MAAMY,YAAY,GAAIL,CAAD,IAAO;IACxBA,CAAC,CAACM,cAAF;IACAV,aAAa,CAACW,QAAQ,CAACd,UAAD,CAAT,CAAb;EACH,CAHD;;EAKA,MAAMc,QAAQ,GAAIC,MAAD,IAAY;IACzB,MAAMC,MAAM,GAAG,EAAf;IACA,MAAMC,KAAK,GAAG,gCAAd;;IACA,IAAG,CAACF,MAAM,CAAChB,IAAX,EAAgB;MACZiB,MAAM,CAACjB,IAAP,GAAc,kBAAd;IACH;EACJ,CAND;;EAOA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAA,UAAOmB,IAAI,CAACC,SAAL,CAAenB,UAAf,EAA2BoB,SAA3B,EAAsC,CAAtC;IAAP;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAK,SAAS,EAAC,OAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eACuB;UAAA;UAAA;UAAA;QAAA,QADvB,eAEI;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,MAAxB;UAA+B,WAAW,EAAC,MAA3C;UAAkD,KAAK,EAAGpB,UAAU,CAACD,IAArE;UACA,QAAQ,EAAEO;QADV;UAAA;UAAA;UAAA;QAAA,QAFJ,eAII;UAAA;UAAA;UAAA;QAAA,QAJJ,eAIa;UAAA;UAAA;UAAA;QAAA,QAJb;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAUI;QAAQ,SAAS,EAAC,sBAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GA1CQT,M;;KAAAA,M;AA4CT,MAAMwB,IAAI,GAAGzB,QAAQ,CAAC0B,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACA,eAAe3B,MAAf"},"metadata":{},"sourceType":"module"}